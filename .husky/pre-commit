#!/bin/bash
set -e

CURRENT_DIR=$(cd -- "$(dirname -- "$0")" && cd .. && pwd)

echo "Current directory: $CURRENT_DIR"

# Run install-local.sh
echo "Running install-local.sh..."
# bash "$CURRENT_DIR/install-local.sh"

# Append the output of aidd-help to README.md
# Replace "## Usage" until the end of the doc with the help
echo "Updating README.md with aidd-help output..."
sed -i '' '/## Usage/,$d' "$CURRENT_DIR/README.md"

echo "Running aidd-help..."
echo -e "## Usage\n" >> "$CURRENT_DIR/README.md"
echo '```text' >> "$CURRENT_DIR/README.md"
bash "$CURRENT_DIR/scripts/aidd-help.sh" | sed 's/\\033\[[0-9;]*m//g' | sed 's/aidd-[^ ]*/`&`/g' >> "$CURRENT_DIR/README.md"
echo '```' >> "$CURRENT_DIR/README.md"

git add README.md

# Generate aliases.sh based on script names
echo "Generating aliases.sh..."
SCRIPTS_DIR="$CURRENT_DIR/scripts"
ALIASES_FILE="$CURRENT_DIR/aliases.sh"

# Start with the header
cat > "$ALIASES_FILE" <<EOL
# ~/.ai-driven-dev/aliases.sh

_PATH=~/.ai-driven-dev/scripts

EOL

# Function to process scripts in a directory
process_scripts() {
    local dir=$1
    local relative_path=${dir#$SCRIPTS_DIR/}
    
    # Add a comment for the section if it's a subdirectory
    if [ -n "$relative_path" ]; then
        echo -e "\n# ${relative_path}" >> "$ALIASES_FILE"
    fi
    
    # Find all .sh files in the directory, excluding _.sh
    find "$dir" -maxdepth 1 -type f -name "*.sh" ! -name "_.sh" | sort | while read -r script; do
        local script_name=$(basename "$script" .sh)
        local alias_name="aidd-$script_name"
        echo "alias $alias_name=\"\$_PATH/${relative_path:+$relative_path/}$script_name.sh\"" >> "$ALIASES_FILE"
    done
}

# Process the main scripts directory
process_scripts "$SCRIPTS_DIR"

# Process subdirectories
find "$SCRIPTS_DIR" -type d | while read -r dir; do
    if [ "$dir" != "$SCRIPTS_DIR" ]; then
        process_scripts "$dir"
    fi
done

echo "aliases.sh generated successfully."

git add aliases.sh